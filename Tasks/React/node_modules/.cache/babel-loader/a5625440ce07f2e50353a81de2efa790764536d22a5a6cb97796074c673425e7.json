{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mihir\\\\task-manager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport TaskList from './TaskList';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTaskName, setNewTaskName] = useState('');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n  const handleAddTask = () => {\n    if (newTaskName.trim() !== '') {\n      const newTask = {\n        id: uuidv4(),\n        name: newTaskName,\n        description: newTaskDescription,\n        completed: false\n      };\n      setTasks([...tasks, newTask]);\n      setNewTaskName('');\n      setNewTaskDescription('');\n    }\n  };\n  const handleEditTask = (taskId, editedName, editedDescription) => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      name: editedName,\n      description: editedDescription\n    } : task));\n  };\n  const handleDeleteTask = taskId => {\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n  };\n  const handleToggleComplete = taskId => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"taskName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Task Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: newTaskName,\n          onChange: e => setNewTaskName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"taskDescription\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Task Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          value: newTaskDescription,\n          onChange: e => setNewTaskDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onEdit: handleEditTask,\n      onDelete: handleDeleteTask,\n      onToggleComplete: handleToggleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"r2RKfknju+H7qlGeL4kDoDvv/NY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Form","Button","TaskList","v4","uuidv4","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTaskName","setNewTaskName","newTaskDescription","setNewTaskDescription","handleAddTask","trim","newTask","id","name","description","completed","handleEditTask","taskId","editedName","editedDescription","prevTasks","map","task","handleDeleteTask","filter","handleToggleComplete","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","value","onChange","e","target","as","variant","onClick","onEdit","onDelete","onToggleComplete","_c","$RefreshReg$"],"sources":["C:/Users/mihir/task-manager/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport TaskList from './TaskList';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTaskName, setNewTaskName] = useState('');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n\n  const handleAddTask = () => {\n    if (newTaskName.trim() !== '') {\n      const newTask = {\n        id: uuidv4(),\n        name: newTaskName,\n        description: newTaskDescription,\n        completed: false,\n      };\n      setTasks([...tasks, newTask]);\n      setNewTaskName('');\n      setNewTaskDescription('');\n    }\n  };\n\n  const handleEditTask = (taskId, editedName, editedDescription) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id === taskId ? { ...task, name: editedName, description: editedDescription } : task\n      )\n    );\n  };\n\n  const handleDeleteTask = (taskId) => {\n    setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n  };\n\n  const handleToggleComplete = (taskId) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id === taskId ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  return (\n    <Container>\n      <Form>\n        <Form.Group controlId=\"taskName\">\n          <Form.Label>Task Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={newTaskName}\n            onChange={(e) => setNewTaskName(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"taskDescription\">\n          <Form.Label>Task Description</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            value={newTaskDescription}\n            onChange={(e) => setNewTaskDescription(e.target.value)}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" onClick={handleAddTask}>\n          Add Task\n        </Button>\n      </Form>\n      <TaskList\n        tasks={tasks}\n        onEdit={handleEditTask}\n        onDelete={handleDeleteTask}\n        onToggleComplete={handleToggleComplete}\n      />\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}