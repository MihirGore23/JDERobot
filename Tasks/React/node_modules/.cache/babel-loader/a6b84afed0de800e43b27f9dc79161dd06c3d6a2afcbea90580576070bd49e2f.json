{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mihir\\\\task-manager\\\\src\\\\Task.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  task,\n  onEdit,\n  onDelete,\n  onToggleComplete\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedName, setEditedName] = useState(task.name);\n  const [editedDescription, setEditedDescription] = useState(task.description);\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleSave = () => {\n    onEdit(task.id, editedName, editedDescription);\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: editedName,\n          onChange: e => setEditedName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          value: editedDescription,\n          onChange: e => setEditedDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => onDelete(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: task.completed ? 'secondary' : 'success',\n          onClick: () => onToggleComplete(task.id),\n          children: task.completed ? 'Completed' : 'Mark as Complete'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Task, \"PTTeOhKCSPj3F3t0YQFtmdquWyQ=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","Card","Button","Form","jsxDEV","_jsxDEV","Task","task","onEdit","onDelete","onToggleComplete","_s","isEditing","setIsEditing","editedName","setEditedName","name","editedDescription","setEditedDescription","description","handleEdit","handleSave","id","children","Body","Control","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","as","variant","onClick","Title","Text","completed","_c","$RefreshReg$"],"sources":["C:/Users/mihir/task-manager/src/Task.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Button, Form } from 'react-bootstrap';\r\n\r\nconst Task = ({ task, onEdit, onDelete, onToggleComplete }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedName, setEditedName] = useState(task.name);\r\n  const [editedDescription, setEditedDescription] = useState(task.description);\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    onEdit(task.id, editedName, editedDescription);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        {isEditing ? (\r\n          <div>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={editedName}\r\n              onChange={(e) => setEditedName(e.target.value)}\r\n            />\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              value={editedDescription}\r\n              onChange={(e) => setEditedDescription(e.target.value)}\r\n            />\r\n            <Button variant=\"success\" onClick={handleSave}>\r\n              Save\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Card.Title>{task.name}</Card.Title>\r\n            <Card.Text>{task.description}</Card.Text>\r\n            <Button variant=\"primary\" onClick={handleEdit}>\r\n              Edit\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={() => onDelete(task.id)}>\r\n              Delete\r\n            </Button>\r\n            <Button variant={task.completed ? 'secondary' : 'success'} onClick={() => onToggleComplete(task.id)}>\r\n              {task.completed ? 'Completed' : 'Mark as Complete'}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}