{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mihir\\\\task-manager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editedTask, setEditedTask] = useState({\n    name: '',\n    description: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedTask(prevTask => ({\n      ...prevTask,\n      [name]: value\n    }));\n  };\n  const handleEdit = () => {\n    const updatedTasks = tasks.map(task => task.id === editingTaskId ? {\n      ...task,\n      ...editedTask\n    } : task);\n    setTasks(updatedTasks);\n    setEditingTaskId(null);\n  };\n  const addTask = () => {\n    setTasks([...tasks, {\n      ...editedTask,\n      completed: false,\n      id: Date.now()\n    }]);\n    setEditedTask({\n      name: '',\n      description: ''\n    });\n  };\n  const deleteTask = id => {\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    setTasks(updatedTasks);\n  };\n  const toggleCompleted = id => {\n    const updatedTasks = tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks);\n  };\n  const editTask = id => {\n    const taskToEdit = tasks.find(task => task.id === id);\n    setEditedTask(taskToEdit);\n    setEditingTaskId(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        addTask();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: editedTask.name,\n        onChange: handleChange,\n        placeholder: \"Task name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        value: editedTask.description,\n        onChange: handleChange,\n        placeholder: \"Task description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: editedTask.name,\n            onChange: handleChange,\n            placeholder: \"Task name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            value: editedTask.description,\n            onChange: handleChange,\n            placeholder: \"Task description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEdit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingTaskId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            onClick: () => editTask(task.id),\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleCompleted(task.id),\n          children: task.completed ? 'Mark Incomplete' : 'Mark Complete'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"01hC/ONNEk3IDnzZ05wY9gPh8o8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","editingTaskId","setEditingTaskId","editedTask","setEditedTask","name","description","handleChange","e","value","target","prevTask","handleEdit","updatedTasks","map","task","id","addTask","completed","Date","now","deleteTask","filter","toggleCompleted","editTask","taskToEdit","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","preventDefault","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mihir/task-manager/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editedTask, setEditedTask] = useState({ name: '', description: '' });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setEditedTask(prevTask => ({ ...prevTask, [name]: value }));\n  };\n\n  const handleEdit = () => {\n    const updatedTasks = tasks.map(task =>\n      task.id === editingTaskId ? { ...task, ...editedTask } : task\n    );\n    setTasks(updatedTasks);\n    setEditingTaskId(null);\n  };\n\n  const addTask = () => {\n    setTasks([...tasks, { ...editedTask, completed: false, id: Date.now() }]);\n    setEditedTask({ name: '', description: '' });\n  };\n\n  const deleteTask = id => {\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    setTasks(updatedTasks);\n  };\n\n  const toggleCompleted = id => {\n    const updatedTasks = tasks.map(task =>\n      task.id === id ? { ...task, completed: !task.completed } : task\n    );\n    setTasks(updatedTasks);\n  };\n\n  const editTask = id => {\n    const taskToEdit = tasks.find(task => task.id === id);\n    setEditedTask(taskToEdit);\n    setEditingTaskId(id);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Task Manager</h1>\n      <form onSubmit={e => { e.preventDefault(); addTask(); }}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={editedTask.name}\n          onChange={handleChange}\n          placeholder=\"Task name\"\n        />\n        <input\n          type=\"text\"\n          name=\"description\"\n          value={editedTask.description}\n          onChange={handleChange}\n          placeholder=\"Task description\"\n        />\n        <button type=\"submit\">Add Task</button>\n      </form>\n      <ul>\n        {tasks.map(task => (\n          <li key={task.id}>\n            {editingTaskId === task.id ? (\n              <>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={editedTask.name}\n                  onChange={handleChange}\n                  placeholder=\"Task name\"\n                />\n                <input\n                  type=\"text\"\n                  name=\"description\"\n                  value={editedTask.description}\n                  onChange={handleChange}\n                  placeholder=\"Task description\"\n                />\n                <button onClick={handleEdit}>Save</button>\n                <button onClick={() => setEditingTaskId(null)}>Cancel</button>\n              </>\n            ) : (\n              <>\n                <h2 onClick={() => editTask(task.id)}>{task.name}</h2>\n                <p>{task.description}</p>\n              </>\n            )}\n            <button onClick={() => toggleCompleted(task.id)}>\n              {task.completed ? 'Mark Incomplete' : 'Mark Complete'}\n            </button>\n            <button onClick={() => deleteTask(task.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}